# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Patient file CI # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#name

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  ptclient-app: # This is the first job https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobs
    runs-on: ubuntu-18.04 # For the list of github hosted runners see https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    steps:
      # Downloads a copy of the code before running CI tests Ref: https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-postgresql-service-containers
      - name: Check out repository code
        uses: actions/checkout@v2 # This is bringing source code to ubuntu server defined in line 13 Localtion of checkout is /home/runner/work/ptfile/ptfile

      - name: Move code to expected folder
        run: |
          sudo mkdir -p /gt/sc-prog-repos/ptfile
          sudo mv /home/runner/work/ptfile/ptfile/ptserver /gt/sc-prog-repos/ptfile/ptserver
          sudo mv /home/runner/work/ptfile/ptfile/ptclient /gt/sc-prog-repos/ptfile/ptclient
          sudo mv /home/runner/work/ptfile/ptfile/utils /gt/sc-prog-repos/ptfile/utils

      - name: Get env info - 1
        run: |
          ifconfig
          ls
          pwd

      - name: Start ptserver ptclient and mariadb
        env:
          DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
        run: |
          cd /gt/sc-prog-repos/ptfile/utils/run-on-docker
          docker-compose -f docker-compose-test.yml up -d
      - name: Get env info - 2
        run: |
          ls -a /gt/sc-prog-repos/ptfile
          docker ps -a

      - name: Goal init the mariadb with database, tables and mock data
        run: |
          docker exec run-on-docker_mariadb_1 /bin/bash < /gt/sc-prog-repos/ptfile/utils/db/create-db-tables-mock-data-in-db.sh
          # Ref: https://stackoverflow.com/questions/31578446/running-a-script-inside-a-docker-container-using-shell-script

      # Comment this when running tests. Since docker logs command does not exit.
      - name: See docker logs
        run: |
          cd /gt/sc-prog-repos/ptfile/utils/run-on-docker
          docker logs --follow run-on-docker_ptserver_1

      # https://stackoverflow.com/questions/61078178/github-action-how-to-ensure-that-server-is-running-properly
      # in docker-compose ptclient listens on port 80 Ref: https://unix.stackexchange.com/questions/5277/how-do-i-tell-a-script-to-wait-for-a-process-to-start-accepting-requests-on-a-po
      - name: wait for ptclient to start listening
        run: |
          sleep 120
      - name: run-tests
        run: |
          docker exec run-on-docker_ptclient_1 /bin/sh -c "cd /gt/sc-prog-repos/ptfile/ptclient;apt-get update -y;apt-get install -y libnss3-dev gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget;npm install;npm run start-testing"

#
#
#
#
# Q1) What is the tree structure?
# The tree strcuture is
#  -- Workflow (Made up of 1 or more jobs)
#    -- Jobs (Jobs run in parallel by default. Each job runs in a fresh version of the virtual environment)
#       -- Services
#       -- Steps # Job contains a sequence of tasks called steps https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idsteps
#          -- name
#          -- uses
#          -- run
#
#
#
#
# Q2) Why have 3 services and not 3 jobs?
# The 3 docker containers are not run as 3 different jobs.
# A. Since ptserver job needs mysql server job to stay on. But mysql-server is not waiting for ptserver
# Future RnD:
# https://github.community/t/keep-jobs-services-alive/118912
# https://github.community/t/mariadb-mysql-service-is-unealthy/17390
# B. When run as 3 services each can ping the other with the hostname of the service given by docker.
#
#
#
#
# Q3) How to get source code inside ptserver and ptclient images?
# Option1: On github I can create a custom docker image at each commit and then inside build.yml I can say:
# ptserver:
#  image: ptserver-node:14 Ref: https://www.learncloudnative.com/blog/2020-02-20-github-action-build-push-docker-images/
#
# Option 2:
# volume mount for e.g at:
# https://github.community/t/keep-jobs-services-alive/118912
# https://github.community/t/custom-docker-action-mounted-volumes/17013
#
# Preferred: Option 2
